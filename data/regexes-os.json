[
  {
    "regex": "HbbTV/\\d+\\.\\d+\\.\\d+ \\( ;(LG)E ;NetCast 4.0",
    "os_v1_replacement": "2013"
  },
  {
    "regex": "HbbTV/\\d+\\.\\d+\\.\\d+ \\( ;(LG)E ;NetCast 3.0",
    "os_v1_replacement": "2012"
  },
  {
    "regex": "HbbTV/1.1.1 \\(;;;;;\\) Maple_2011",
    "os_replacement": "Samsung",
    "os_v1_replacement": "2011"
  },
  {
    "regex": "HbbTV/\\d+\\.\\d+\\.\\d+ \\(;(Samsung);SmartTV([0-9]{4});.*FXPDEUC",
    "os_v2_replacement": "UE40F7000"
  },
  {
    "regex": "HbbTV/\\d+\\.\\d+\\.\\d+ \\(;(Samsung);SmartTV([0-9]{4});.*MST12DEUC",
    "os_v2_replacement": "UE32F4500"
  },
  {
    "regex": "HbbTV/1\\.1\\.1 \\(; (Philips);.*NETTV/4",
    "os_v1_replacement": "2013"
  },
  {
    "regex": "HbbTV/1\\.1\\.1 \\(; (Philips);.*NETTV/3",
    "os_v1_replacement": "2012"
  },
  {
    "regex": "HbbTV/1\\.1\\.1 \\(; (Philips);.*NETTV/2",
    "os_v1_replacement": "2011"
  },
  {
    "regex": "HbbTV/\\d+\\.\\d+\\.\\d+.*(firetv)-firefox-plugin (\\d+).(\\d+).(\\d+)",
    "os_replacement": "FireHbbTV"
  },
  {
    "regex": "HbbTV/\\d+\\.\\d+\\.\\d+ \\(.*; ?([a-zA-Z]+) ?;.*(201[1-9]).*\\)"
  },
  {
    "regex": "AspiegelBot",
    "os_replacement": "Other"
  },
  {
    "regex": "(Windows Phone) (?:OS[ /])?(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone)[ +]+(\\d+)[_\\.](\\d+)(?:[_\\.](\\d+)|).*Outlook-iOS-Android",
    "os_replacement": "iOS"
  },
  {
    "regex": "ArcGIS\\.?(iOS|Android)-\\d+\\.\\d+(?:\\.\\d+|)(?:[^\\/]+|)\\/(\\d+)(?:\\.(\\d+)(?:\\.(\\d+)|)|)"
  },
  {
    "regex": "ArcGISRuntime-(?:Android|iOS)\\/\\d+\\.\\d+(?:\\.\\d+|) \\((Android|iOS) (\\d+)(?:\\.(\\d+)(?:\\.(\\d+)|)|);"
  },
  {
    "regex": "(Android)[ \\-/](\\d+)(?:\\.(\\d+)|)(?:[.\\-]([a-z0-9]+)|)"
  },
  {
    "regex": "(Android) Donut",
    "os_v1_replacement": "1",
    "os_v2_replacement": "2"
  },
  {
    "regex": "(Android) Eclair",
    "os_v1_replacement": "2",
    "os_v2_replacement": "1"
  },
  {
    "regex": "(Android) Froyo",
    "os_v1_replacement": "2",
    "os_v2_replacement": "2"
  },
  {
    "regex": "(Android) Gingerbread",
    "os_v1_replacement": "2",
    "os_v2_replacement": "3"
  },
  {
    "regex": "(Android) Honeycomb",
    "os_v1_replacement": "3"
  },
  {
    "regex": "(Android) (\\d+);"
  },
  {
    "regex": "^UCWEB.*; (Adr) (\\d+)\\.(\\d+)(?:[.\\-]([a-z0-9]+)|);",
    "os_replacement": "Android"
  },
  {
    "regex": "^UCWEB.*; (iPad|iPh|iPd) OS (\\d+)_(\\d+)(?:_(\\d+)|);",
    "os_replacement": "iOS"
  },
  {
    "regex": "^UCWEB.*; (wds) (\\d+)\\.(\\d+)(?:\\.(\\d+)|);",
    "os_replacement": "Windows Phone"
  },
  {
    "regex": "^(JUC).*; ?U; ?(?:Android|)(\\d+)\\.(\\d+)(?:[\\.\\-]([a-z0-9]+)|)",
    "os_replacement": "Android"
  },
  {
    "regex": "(android)\\s(?:mobile\\/)(\\d+)(?:\\.(\\d+)(?:\\.(\\d+)|)|)",
    "os_replacement": "Android"
  },
  {
    "regex": "(Silk-Accelerated=[a-z]{4,5})",
    "os_replacement": "Android"
  },
  {
    "regex": "(x86_64|aarch64)\\ (\\d+)\\.(\\d+)\\.(\\d+).*Chrome.*(?:CitrixChromeApp)$",
    "os_replacement": "Chrome OS"
  },
  {
    "regex": "(XBLWP7)",
    "os_replacement": "Windows Phone"
  },
  {
    "regex": "(Windows ?Mobile)",
    "os_replacement": "Windows Mobile"
  },
  {
    "regex": "(Windows 10)",
    "os_replacement": "Windows",
    "os_v1_replacement": "10"
  },
  {
    "regex": "(Windows (?:NT 5\\.2|NT 5\\.1))",
    "os_replacement": "Windows",
    "os_v1_replacement": "XP"
  },
  {
    "regex": "(Win(?:dows NT |32NT\\/)6\\.1)",
    "os_replacement": "Windows",
    "os_v1_replacement": "7"
  },
  {
    "regex": "(Win(?:dows NT |32NT\\/)6\\.0)",
    "os_replacement": "Windows",
    "os_v1_replacement": "Vista"
  },
  {
    "regex": "(Win 9x 4\\.90)",
    "os_replacement": "Windows",
    "os_v1_replacement": "ME"
  },
  {
    "regex": "(Windows NT 6\\.2; ARM;)",
    "os_replacement": "Windows",
    "os_v1_replacement": "RT"
  },
  {
    "regex": "(Win(?:dows NT |32NT\\/)6\\.2)",
    "os_replacement": "Windows",
    "os_v1_replacement": "8"
  },
  {
    "regex": "(Windows NT 6\\.3; ARM;)",
    "os_replacement": "Windows",
    "os_v1_replacement": "RT 8",
    "os_v2_replacement": "1"
  },
  {
    "regex": "(Win(?:dows NT |32NT\\/)6\\.3)",
    "os_replacement": "Windows",
    "os_v1_replacement": "8",
    "os_v2_replacement": "1"
  },
  {
    "regex": "(Win(?:dows NT |32NT\\/)6\\.4)",
    "os_replacement": "Windows",
    "os_v1_replacement": "10"
  },
  {
    "regex": "(Windows NT 10\\.0)",
    "os_replacement": "Windows",
    "os_v1_replacement": "10"
  },
  {
    "regex": "(Windows NT 5\\.0)",
    "os_replacement": "Windows",
    "os_v1_replacement": "2000"
  },
  {
    "regex": "(WinNT4.0)",
    "os_replacement": "Windows",
    "os_v1_replacement": "NT 4.0"
  },
  {
    "regex": "(Windows ?CE)",
    "os_replacement": "Windows",
    "os_v1_replacement": "CE"
  },
  {
    "regex": "Win(?:dows)? ?(95|98|3.1|NT|ME|2000|XP|Vista|7|CE)",
    "os_replacement": "Windows",
    "os_v1_replacement": "$1"
  },
  {
    "regex": "Win16",
    "os_replacement": "Windows",
    "os_v1_replacement": "3.1"
  },
  {
    "regex": "Win32",
    "os_replacement": "Windows",
    "os_v1_replacement": "95"
  },
  {
    "regex": "^Box.*Windows/([\\d.]+);",
    "os_replacement": "Windows",
    "os_v1_replacement": "$1"
  },
  {
    "regex": "(Tizen)[/ ](\\d+)\\.(\\d+)"
  },
  {
    "regex": "((?:Mac[ +]?|; )OS[ +]X)[\\s+/](?:(\\d+)[_.](\\d+)(?:[_.](\\d+)|)|Mach-O)",
    "os_replacement": "Mac OS X"
  },
  {
    "regex": "\\w+\\s+Mac OS X\\s+\\w+\\s+(\\d+).(\\d+).(\\d+).*",
    "os_replacement": "Mac OS X",
    "os_v1_replacement": "$1",
    "os_v2_replacement": "$2",
    "os_v3_replacement": "$3"
  },
  {
    "regex": " (Dar)(win)/(9).(\\d+).*\\((?:i386|x86_64|Power Macintosh)\\)",
    "os_replacement": "Mac OS X",
    "os_v1_replacement": "10",
    "os_v2_replacement": "5"
  },
  {
    "regex": " (Dar)(win)/(10).(\\d+).*\\((?:i386|x86_64)\\)",
    "os_replacement": "Mac OS X",
    "os_v1_replacement": "10",
    "os_v2_replacement": "6"
  },
  {
    "regex": " (Dar)(win)/(11).(\\d+).*\\((?:i386|x86_64)\\)",
    "os_replacement": "Mac OS X",
    "os_v1_replacement": "10",
    "os_v2_replacement": "7"
  },
  {
    "regex": " (Dar)(win)/(12).(\\d+).*\\((?:i386|x86_64)\\)",
    "os_replacement": "Mac OS X",
    "os_v1_replacement": "10",
    "os_v2_replacement": "8"
  },
  {
    "regex": " (Dar)(win)/(13).(\\d+).*\\((?:i386|x86_64)\\)",
    "os_replacement": "Mac OS X",
    "os_v1_replacement": "10",
    "os_v2_replacement": "9"
  },
  {
    "regex": "Mac_PowerPC",
    "os_replacement": "Mac OS"
  },
  {
    "regex": "(?:PPC|Intel) (Mac OS X)"
  },
  {
    "regex": "^Box.*;(Darwin)/(10)\\.(1\\d)(?:\\.(\\d+)|)",
    "os_replacement": "Mac OS X"
  },
  {
    "regex": "(Apple\\s?TV)(?:/(\\d+)\\.(\\d+)|)",
    "os_replacement": "ATV OS X"
  },
  {
    "regex": "(CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone|CPU IPhone OS)[ +]+(\\d+)[_\\.](\\d+)(?:[_\\.](\\d+)|)",
    "os_replacement": "iOS"
  },
  {
    "regex": "(iPhone|iPad|iPod); Opera",
    "os_replacement": "iOS"
  },
  {
    "regex": "(iPhone|iPad|iPod).*Mac OS X.*Version/(\\d+)\\.(\\d+)",
    "os_replacement": "iOS"
  },
  {
    "regex": "(CFNetwork)/(5)48\\.0\\.3.* Darwin/11\\.0\\.0",
    "os_replacement": "iOS"
  },
  {
    "regex": "(CFNetwork)/(5)48\\.(0)\\.4.* Darwin/(1)1\\.0\\.0",
    "os_replacement": "iOS"
  },
  {
    "regex": "(CFNetwork)/(5)48\\.(1)\\.4",
    "os_replacement": "iOS"
  },
  {
    "regex": "(CFNetwork)/(4)85\\.1(3)\\.9",
    "os_replacement": "iOS"
  },
  {
    "regex": "(CFNetwork)/(6)09\\.(1)\\.4",
    "os_replacement": "iOS"
  },
  {
    "regex": "(CFNetwork)/(6)(0)9",
    "os_replacement": "iOS"
  },
  {
    "regex": "(CFNetwork)/6(7)2\\.(1)\\.13",
    "os_replacement": "iOS"
  },
  {
    "regex": "(CFNetwork)/6(7)2\\.(1)\\.(1)4",
    "os_replacement": "iOS"
  },
  {
    "regex": "(CF)(Network)/6(7)(2)\\.1\\.15",
    "os_replacement": "iOS",
    "os_v1_replacement": "7",
    "os_v2_replacement": "1"
  },
  {
    "regex": "(CFNetwork)/6(7)2\\.(0)\\.(?:2|8)",
    "os_replacement": "iOS"
  },
  {
    "regex": "(CFNetwork)/709\\.1",
    "os_replacement": "iOS",
    "os_v1_replacement": "8",
    "os_v2_replacement": "0.b5"
  },
  {
    "regex": "(CF)(Network)/711\\.(\\d)",
    "os_replacement": "iOS",
    "os_v1_replacement": "8"
  },
  {
    "regex": "(CF)(Network)/(720)\\.(\\d)",
    "os_replacement": "Mac OS X",
    "os_v1_replacement": "10",
    "os_v2_replacement": "10"
  },
  {
    "regex": "(CF)(Network)/(760)\\.(\\d)",
    "os_replacement": "Mac OS X",
    "os_v1_replacement": "10",
    "os_v2_replacement": "11"
  },
  {
    "regex": "CFNetwork/7.* Darwin/15\\.4\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "9",
    "os_v2_replacement": "3",
    "os_v3_replacement": "1"
  },
  {
    "regex": "CFNetwork/7.* Darwin/15\\.5\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "9",
    "os_v2_replacement": "3",
    "os_v3_replacement": "2"
  },
  {
    "regex": "CFNetwork/7.* Darwin/15\\.6\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "9",
    "os_v2_replacement": "3",
    "os_v3_replacement": "5"
  },
  {
    "regex": "(CF)(Network)/758\\.(\\d)",
    "os_replacement": "iOS",
    "os_v1_replacement": "9"
  },
  {
    "regex": "CFNetwork/808\\.3 Darwin/16\\.3\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "10",
    "os_v2_replacement": "2",
    "os_v3_replacement": "1"
  },
  {
    "regex": "(CF)(Network)/808\\.(\\d)",
    "os_replacement": "iOS",
    "os_v1_replacement": "10"
  },
  {
    "regex": "CFNetwork/.* Darwin/17\\.\\d+.*\\(x86_64\\)",
    "os_replacement": "Mac OS X",
    "os_v1_replacement": "10",
    "os_v2_replacement": "13"
  },
  {
    "regex": "CFNetwork/.* Darwin/16\\.\\d+.*\\(x86_64\\)",
    "os_replacement": "Mac OS X",
    "os_v1_replacement": "10",
    "os_v2_replacement": "12"
  },
  {
    "regex": "CFNetwork/8.* Darwin/15\\.\\d+.*\\(x86_64\\)",
    "os_replacement": "Mac OS X",
    "os_v1_replacement": "10",
    "os_v2_replacement": "11"
  },
  {
    "regex": "CFNetwork/.* Darwin/(9)\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "1"
  },
  {
    "regex": "CFNetwork/.* Darwin/(10)\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "4"
  },
  {
    "regex": "CFNetwork/.* Darwin/(11)\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "5"
  },
  {
    "regex": "CFNetwork/.* Darwin/(13)\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "6"
  },
  {
    "regex": "CFNetwork/6.* Darwin/(14)\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "7"
  },
  {
    "regex": "CFNetwork/7.* Darwin/(14)\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "8",
    "os_v2_replacement": "0"
  },
  {
    "regex": "CFNetwork/7.* Darwin/(15)\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "9",
    "os_v2_replacement": "0"
  },
  {
    "regex": "CFNetwork/8.* Darwin/16\\.5\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "10",
    "os_v2_replacement": "3"
  },
  {
    "regex": "CFNetwork/8.* Darwin/16\\.6\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "10",
    "os_v2_replacement": "3",
    "os_v3_replacement": "2"
  },
  {
    "regex": "CFNetwork/8.* Darwin/16\\.7\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "10",
    "os_v2_replacement": "3",
    "os_v3_replacement": "3"
  },
  {
    "regex": "CFNetwork/8.* Darwin/(16)\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "10"
  },
  {
    "regex": "CFNetwork/8.* Darwin/17\\.0\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "11",
    "os_v2_replacement": "0"
  },
  {
    "regex": "CFNetwork/8.* Darwin/17\\.2\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "11",
    "os_v2_replacement": "1"
  },
  {
    "regex": "CFNetwork/8.* Darwin/17\\.3\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "11",
    "os_v2_replacement": "2"
  },
  {
    "regex": "CFNetwork/8.* Darwin/17\\.4\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "11",
    "os_v2_replacement": "2",
    "os_v3_replacement": "6"
  },
  {
    "regex": "CFNetwork/8.* Darwin/17\\.5\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "11",
    "os_v2_replacement": "3"
  },
  {
    "regex": "CFNetwork/9.* Darwin/17\\.6\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "11",
    "os_v2_replacement": "4"
  },
  {
    "regex": "CFNetwork/9.* Darwin/17\\.7\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "11",
    "os_v2_replacement": "4",
    "os_v3_replacement": "1"
  },
  {
    "regex": "CFNetwork/8.* Darwin/(17)\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "11"
  },
  {
    "regex": "CFNetwork/9.* Darwin/18\\.0\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "12",
    "os_v2_replacement": "0"
  },
  {
    "regex": "CFNetwork/9.* Darwin/(18)\\.\\d+",
    "os_replacement": "iOS",
    "os_v1_replacement": "12"
  },
  {
    "regex": "CFNetwork/.* Darwin/",
    "os_replacement": "iOS"
  },
  {
    "regex": "\\b(iOS[ /]|iOS; |iPhone(?:/| v|[ _]OS[/,]|; | OS : |\\d,\\d/|\\d,\\d; )|iPad/)(\\d{1,2})[_\\.](\\d{1,2})(?:[_\\.](\\d+)|)",
    "os_replacement": "iOS"
  },
  {
    "regex": "\\((iOS);"
  },
  {
    "regex": "(watchOS)/(\\d+)\\.(\\d+)(?:\\.(\\d+)|)",
    "os_replacement": "WatchOS"
  },
  {
    "regex": "Outlook-(iOS)/\\d+\\.\\d+\\.prod\\.iphone"
  },
  {
    "regex": "(iPod|iPhone|iPad)",
    "os_replacement": "iOS"
  },
  {
    "regex": "(tvOS)[/ ](\\d+)\\.(\\d+)(?:\\.(\\d+)|)",
    "os_replacement": "tvOS"
  },
  {
    "regex": "(CrOS) [a-z0-9_]+ (\\d+)\\.(\\d+)(?:\\.(\\d+)|)",
    "os_replacement": "Chrome OS"
  },
  {
    "regex": "([Dd]ebian)",
    "os_replacement": "Debian"
  },
  {
    "regex": "(Linux Mint)(?:/(\\d+)|)"
  },
  {
    "regex": "(Mandriva)(?: Linux|)/(?:[\\d.-]+m[a-z]{2}(\\d+).(\\d)|)"
  },
  {
    "regex": "(Symbian[Oo][Ss])[/ ](\\d+)\\.(\\d+)",
    "os_replacement": "Symbian OS"
  },
  {
    "regex": "(Symbian/3).+NokiaBrowser/7\\.3",
    "os_replacement": "Symbian^3 Anna"
  },
  {
    "regex": "(Symbian/3).+NokiaBrowser/7\\.4",
    "os_replacement": "Symbian^3 Belle"
  },
  {
    "regex": "(Symbian/3)",
    "os_replacement": "Symbian^3"
  },
  {
    "regex": "\\b(Series 60|SymbOS|S60Version|S60V\\d|S60\\b)",
    "os_replacement": "Symbian OS"
  },
  {
    "regex": "(MeeGo)"
  },
  {
    "regex": "Symbian [Oo][Ss]",
    "os_replacement": "Symbian OS"
  },
  {
    "regex": "Series40;",
    "os_replacement": "Nokia Series 40"
  },
  {
    "regex": "Series30Plus;",
    "os_replacement": "Nokia Series 30 Plus"
  },
  {
    "regex": "(BB10);.+Version/(\\d+)\\.(\\d+)\\.(\\d+)",
    "os_replacement": "BlackBerry OS"
  },
  {
    "regex": "(Black[Bb]erry)[0-9a-z]+/(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+)|)",
    "os_replacement": "BlackBerry OS"
  },
  {
    "regex": "(Black[Bb]erry).+Version/(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+)|)",
    "os_replacement": "BlackBerry OS"
  },
  {
    "regex": "(RIM Tablet OS) (\\d+)\\.(\\d+)\\.(\\d+)",
    "os_replacement": "BlackBerry Tablet OS"
  },
  {
    "regex": "(Play[Bb]ook)",
    "os_replacement": "BlackBerry Tablet OS"
  },
  {
    "regex": "(Black[Bb]erry)",
    "os_replacement": "BlackBerry OS"
  },
  {
    "regex": "(K[Aa][Ii]OS)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+)|)",
    "os_replacement": "KaiOS"
  },
  {
    "regex": "\\((?:Mobile|Tablet);.+Gecko/18.0 Firefox/\\d+\\.\\d+",
    "os_replacement": "Firefox OS",
    "os_v1_replacement": "1",
    "os_v2_replacement": "0",
    "os_v3_replacement": "1"
  },
  {
    "regex": "\\((?:Mobile|Tablet);.+Gecko/18.1 Firefox/\\d+\\.\\d+",
    "os_replacement": "Firefox OS",
    "os_v1_replacement": "1",
    "os_v2_replacement": "1"
  },
  {
    "regex": "\\((?:Mobile|Tablet);.+Gecko/26.0 Firefox/\\d+\\.\\d+",
    "os_replacement": "Firefox OS",
    "os_v1_replacement": "1",
    "os_v2_replacement": "2"
  },
  {
    "regex": "\\((?:Mobile|Tablet);.+Gecko/28.0 Firefox/\\d+\\.\\d+",
    "os_replacement": "Firefox OS",
    "os_v1_replacement": "1",
    "os_v2_replacement": "3"
  },
  {
    "regex": "\\((?:Mobile|Tablet);.+Gecko/30.0 Firefox/\\d+\\.\\d+",
    "os_replacement": "Firefox OS",
    "os_v1_replacement": "1",
    "os_v2_replacement": "4"
  },
  {
    "regex": "\\((?:Mobile|Tablet);.+Gecko/32.0 Firefox/\\d+\\.\\d+",
    "os_replacement": "Firefox OS",
    "os_v1_replacement": "2",
    "os_v2_replacement": "0"
  },
  {
    "regex": "\\((?:Mobile|Tablet);.+Gecko/34.0 Firefox/\\d+\\.\\d+",
    "os_replacement": "Firefox OS",
    "os_v1_replacement": "2",
    "os_v2_replacement": "1"
  },
  {
    "regex": "\\((?:Mobile|Tablet);.+Firefox/\\d+\\.\\d+",
    "os_replacement": "Firefox OS"
  },
  {
    "regex": "(BREW)[ /](\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(BREW);"
  },
  {
    "regex": "(Brew MP|BMP)[ /](\\d+)\\.(\\d+)\\.(\\d+)",
    "os_replacement": "Brew MP"
  },
  {
    "regex": "BMP;",
    "os_replacement": "Brew MP"
  },
  {
    "regex": "(GoogleTV)(?: (\\d+)\\.(\\d+)(?:\\.(\\d+)|)|/[\\da-z]+)"
  },
  {
    "regex": "(WebTV)/(\\d+).(\\d+)"
  },
  {
    "regex": "(CrKey)(?:[/](\\d+)\\.(\\d+)(?:\\.(\\d+)|)|)",
    "os_replacement": "Chromecast"
  },
  {
    "regex": "(hpw|web)OS/(\\d+)\\.(\\d+)(?:\\.(\\d+)|)",
    "os_replacement": "webOS"
  },
  {
    "regex": "(VRE);"
  },
  {
    "regex": "(Fedora|Red Hat|PCLinuxOS|Puppy|Ubuntu|Kindle|Bada|Sailfish|Lubuntu|BackTrack|Slackware|(?:Free|Open|Net|\\b)BSD)[/ ](\\d+)\\.(\\d+)(?:\\.(\\d+)|)(?:\\.(\\d+)|)"
  },
  {
    "regex": "(Linux)[ /](\\d+)\\.(\\d+)(?:\\.(\\d+)|).*gentoo",
    "os_replacement": "Gentoo"
  },
  {
    "regex": "\\((Bada);"
  },
  {
    "regex": "(Windows|Android|WeTab|Maemo|Web0S)"
  },
  {
    "regex": "(Ubuntu|Kubuntu|Arch Linux|CentOS|Slackware|Gentoo|openSUSE|SUSE|Red Hat|Fedora|PCLinuxOS|Mageia|(?:Free|Open|Net|\\b)BSD)"
  },
  {
    "regex": "(Linux)(?:[ /](\\d+)\\.(\\d+)(?:\\.(\\d+)|)|)"
  },
  {
    "regex": "SunOS",
    "os_replacement": "Solaris"
  },
  {
    "regex": "\\(linux-gnu\\)",
    "os_replacement": "Linux"
  },
  {
    "regex": "\\(x86_64-redhat-linux-gnu\\)",
    "os_replacement": "Red Hat"
  },
  {
    "regex": "\\((freebsd)(\\d+)\\.(\\d+)\\)",
    "os_replacement": "FreeBSD"
  },
  {
    "regex": "linux",
    "os_replacement": "Linux"
  },
  {
    "regex": "^(Roku)/DVP-(\\d+)\\.(\\d+)"
  }
]
